webpackJsonp([17,214],{1084:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u70b9\u51fb\u4e0a\u4f20\u7528\u6237\u5934\u50cf\uff0c\u5e76\u4f7f\u7528 ",["code","beforeUpload"]," \u9650\u5236\u7528\u6237\u4e0a\u4f20\u7684\u56fe\u7247\u683c\u5f0f\u548c\u5927\u5c0f\u3002"],["blockquote",["p",["code","beforeUpload"]," \u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a Promise \u4ee5\u652f\u6301\u4e5f\u652f\u6301\u5f02\u6b65\u68c0\u67e5\uff1a",["a",{title:null,href:"http://react-component.github.io/upload/examples/beforeUpload.html"},"\u793a\u4f8b"],"\u3002"]]],"en-US":[["p","Click to upload user's avatar, and validate size and format of picture with ",["code","beforeUpload"],"."],["blockquote",["p","The return value of function ",["code","beforeUpload"]," can be a Promise to check asynchronously. ",["a",{title:null,href:"http://react-component.github.io/upload/examples/beforeUpload.html"},"demo"]]]]},meta:{order:1,title:{"zh-CN":"\u7528\u6237\u5934\u50cf","en-US":"Avatar"},filename:"components/upload/demo/avatar.md",id:"components-upload-demo-avatar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'load\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> isJPG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJPG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> isJPG <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Avatar</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment" spellcheck="true">// Get this url from response in real world.</span>\n      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> imageUrl <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> imageUrl <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> imageUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>imageUrl<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Upload\n        className<span class="token operator">=</span><span class="token string">"avatar-uploader"</span>\n        name<span class="token operator">=</span><span class="token string">"avatar"</span>\n        showUploadList<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>\n        action<span class="token operator">=</span><span class="token string">"//jsonplaceholder.typicode.com/posts/"</span>\n        beforeUpload<span class="token operator">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span>\n      <span class="token operator">></span>\n        <span class="token punctuation">{</span>\n          imageUrl <span class="token operator">?</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span> className<span class="token punctuation">=</span><span class="token punctuation">"</span></span><span class="token attr-name">avatar"</span> <span class="token punctuation">/></span></span> <span class="token punctuation">:</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar-uploader-trigger<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Avatar</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:function(){function n(n,s){for(var a=Object.getOwnPropertyNames(s),t=0;t<a.length;t++){var p=a[t],o=Object.getOwnPropertyDescriptor(s,p);o&&o.configurable&&void 0===n[p]&&Object.defineProperty(n,p,o)}return n}function s(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function t(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function p(s,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function, not "+typeof a);s.prototype=Object.create(a&&a.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),a&&(Object.setPrototypeOf?Object.setPrototypeOf(s,a):n(s,a))}function o(n,s){var a=new FileReader;a.addEventListener("load",function(){return s(a.result)}),a.readAsDataURL(n)}function e(n){var s="image/jpeg"===n.type;s||l.message.error("You can only upload JPG file!");var a=n.size/1024/1024<2;return a||l.message.error("Image must smaller than 2MB!"),s&&a}var c=a(1),l=(a(2),a(3)),u=function(n){function a(){var p,e,c;s(this,a);for(var l=arguments.length,u=Array(l),i=0;i<l;i++)u[i]=arguments[i];return p=e=t(this,n.call.apply(n,[this].concat(u))),e.state={},e.handleChange=function(n){"done"===n.file.status&&o(n.file.originFileObj,function(n){return e.setState({imageUrl:n})})},c=p,t(e,c)}return p(a,n),a.prototype.render=function(){var n=this.state.imageUrl;return c.createElement(l.Upload,{className:"avatar-uploader",name:"avatar",showUploadList:!1,action:"//jsonplaceholder.typicode.com/posts/",beforeUpload:e,onChange:this.handleChange},n?c.createElement("img",{src:n,alt:"",className:"avatar"}):c.createElement(l.Icon,{type:"plus",className:"avatar-uploader-trigger"}))},a}(c.Component);return c.createElement(u,null)},style:".avatar-uploader,\n.avatar-uploader-trigger,\n.avatar {\n  width: 150px;\n  height: 150px;\n}\n.avatar-uploader {\n  display: block;\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n}\n.avatar-uploader-trigger {\n  display: table-cell;\n  vertical-align: middle;\n  font-size: 28px;\n  color: #999;\n}",highlightedStyle:'<span class="token selector"><span class="token class">.avatar-uploader</span>,\n<span class="token class">.avatar-uploader-trigger</span>,\n<span class="token class">.avatar</span> </span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.avatar-uploader</span> </span><span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px dashed <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.avatar-uploader-trigger</span> </span><span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>\n  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">28</span>px<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#999</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},1085:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u7ecf\u5178\u6b3e\u5f0f\uff0c\u7528\u6237\u70b9\u51fb\u6309\u94ae\u5f39\u51fa\u6587\u4ef6\u9009\u62e9\u6846\u3002"]],"en-US":[["p","Classic mode. File selection dialog pops up when upload button is clicked."]]},meta:{order:0,title:{"zh-CN":"\u70b9\u51fb\u4e0a\u4f20","en-US":"Upload by clicking"},filename:"components/upload/demo/basic.md",id:"components-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    authorization<span class="token punctuation">:</span> <span class="token string">\'authorization-text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> Click to Upload\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:function(){var n=a(1),s=(a(2),a(3)),t={name:"file",action:"//jsonplaceholder.typicode.com/posts/",headers:{authorization:"authorization-text"},onChange:function(n){"uploading"!==n.file.status&&console.log(n.file,n.fileList),"done"===n.file.status?s.message.success(n.file.name+" file uploaded successfully"):"error"===n.file.status&&s.message.error(n.file.name+" file upload failed.")}};return n.createElement(s.Upload,t,n.createElement(s.Button,null,n.createElement(s.Icon,{type:"upload"})," Click to Upload"))}}},1086:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u4f7f\u7528 ",["code","defaultFileList"]," \u8bbe\u7f6e\u5df2\u4e0a\u4f20\u7684\u5185\u5bb9\u3002"]],"en-US":[["p","Use ",["code","defaultFileList"]," for uploaded files when page init."]]},meta:{order:2,title:{"zh-CN":"\u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5217\u8868","en-US":"Default Files"},filename:"components/upload/demo/defaultFileList.md",id:"components-upload-demo-defaultFileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    uid<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n    status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n    reponse<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// custom error message to show</span>\n    url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    uid<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n    status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n    url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/yyy.png\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    uid<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'zzz.png\'</span><span class="token punctuation">,</span>\n    status<span class="token punctuation">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    reponse<span class="token punctuation">:</span> <span class="token string">\'Server Error 500\'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// custom error message to show</span>\n    url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/zzz.png\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> Upload\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:function(){var n=a(1),s=(a(2),a(3)),t={action:"//jsonplaceholder.typicode.com/posts/",onChange:function(n){var s=n.file,a=n.fileList;"uploading"!==s.status&&console.log(s,a)},defaultFileList:[{uid:1,name:"xxx.png",status:"done",reponse:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:2,name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:3,name:"zzz.png",status:"error",reponse:"Server Error 500",url:"http://www.baidu.com/zzz.png"}]};return n.createElement(s.Upload,t,n.createElement(s.Button,null,n.createElement(s.Icon,{type:"upload"})," Upload"))}}},1087:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u628a\u6587\u4ef6\u62d6\u5165\u6307\u5b9a\u533a\u57df\uff0c\u5b8c\u6210\u4e0a\u4f20\uff0c\u540c\u6837\u652f\u6301\u70b9\u51fb\u4e0a\u4f20\u3002"],["p","\u8bbe\u7f6e ",["code","multiple"]," \u540e\uff0c\u5728 ",["code","IE10+"]," \u53ef\u4ee5\u4e00\u6b21\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002"]],"en-US":[["p","You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."],["p","We can upload serveral files at once in modern browsers by giving the input the ",["code","multiple"]," attribute."]]},meta:{order:5,title:{"zh-CN":"\u62d6\u62fd\u4e0a\u4f20","en-US":"Drag and Drop"},filename:"components/upload/demo/drag.md",id:"components-upload-demo-drag"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Dragger <span class="token operator">=</span> Upload<span class="token punctuation">.</span>Dragger<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  showUploadList<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> status <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">\'uploading\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'done\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">\'error\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">180</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Dragger <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit <span class="token keyword">from</span> uploading company data or other band files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dragger</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'
}],preview:function(){var n=a(1),s=(a(2),a(3)),t=s.Upload.Dragger,p={name:"file",multiple:!0,showUploadList:!1,action:"//jsonplaceholder.typicode.com/posts/",onChange:function(n){var a=n.file.status;"uploading"!==a&&console.log(n.file,n.fileList),"done"===a?s.message.success(n.file.name+" file uploaded successfully."):"error"===a&&s.message.error(n.file.name+" file upload failed.")}};return n.createElement("div",{style:{marginTop:16,height:180}},n.createElement(t,p,n.createElement("p",{className:"ant-upload-drag-icon"},n.createElement(s.Icon,{type:"inbox"})),n.createElement("p",{className:"ant-upload-text"},"Click or drag file to this area to upload"),n.createElement("p",{className:"ant-upload-hint"},"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files")))}}},1088:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u4f7f\u7528 ",["code","fileList"]," \u5bf9\u5217\u8868\u8fdb\u884c\u5b8c\u5168\u63a7\u5236\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u81ea\u5b9a\u4e49\u529f\u80fd\uff0c\u4ee5\u4e0b\u6f14\u793a\u4e09\u79cd\u60c5\u51b5\uff1a"],["p","1) \u4e0a\u4f20\u5217\u8868\u6570\u91cf\u7684\u9650\u5236\u3002"],["p","2) \u8bfb\u53d6\u8fdc\u7a0b\u8def\u5f84\u5e76\u663e\u793a\u94fe\u63a5\u3002"],["p","3) \u6309\u7167\u670d\u52a1\u5668\u8fd4\u56de\u4fe1\u606f\u7b5b\u9009\u6210\u529f\u4e0a\u4f20\u7684\u6587\u4ef6\u3002"]],"en-US":[["p","You can gain full control over filelist by configuring ",["code","fileList"],". You can accomplish all kinds of customed functions. The following shows three circumstances:"],["p","1) limit the number of uploaded files."],["p","2) read from response and show file link."],["p","3) filter successfully uploaded files according to response from server."]]},meta:{order:4,title:{"zh-CN":"\u5b8c\u5168\u63a7\u5236\u7684\u4e0a\u4f20\u5217\u8868","en-US":"Complete control over file list"},filename:"components/upload/demo/fileList.md",id:"components-upload-demo-fileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyUpload</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n      uid<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'http://www.baidu.com/xxx.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> fileList <span class="token operator">=</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// 1. Limit the number of uploaded files</span>\n    <span class="token comment" spellcheck="true">//    Only to show two recent uploaded files, and old ones will be replaced by the new</span>\n    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// 2. read from response and show file link</span>\n    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment" spellcheck="true">// Component will show file.url as link</span>\n        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> file<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// 3. filter successfully uploaded files according to response from server</span>\n    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">\'success\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n      onChange<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> fileList<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>fileList<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> upload\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyUpload</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:function(){function n(n,s){for(var a=Object.getOwnPropertyNames(s),t=0;t<a.length;t++){var p=a[t],o=Object.getOwnPropertyDescriptor(s,p);o&&o.configurable&&void 0===n[p]&&Object.defineProperty(n,p,o)}return n}function s(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function t(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function p(s,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function, not "+typeof a);s.prototype=Object.create(a&&a.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),a&&(Object.setPrototypeOf?Object.setPrototypeOf(s,a):n(s,a))}var o=a(1),e=(a(2),Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}),c=a(3),l=function(n){function a(){var p,o,e;s(this,a);for(var c=arguments.length,l=Array(c),u=0;u<c;u++)l[u]=arguments[u];return p=o=t(this,n.call.apply(n,[this].concat(l))),o.state={fileList:[{uid:-1,name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]},o.handleChange=function(n){var s=n.fileList;s=s.slice(-2),s=s.map(function(n){return n.response&&(n.url=n.response.url),n}),s=s.filter(function(n){return!n.response||"success"===n.response.status}),o.setState({fileList:s})},e=p,t(o,e)}return p(a,n),a.prototype.render=function(){var n={action:"//jsonplaceholder.typicode.com/posts/",onChange:this.handleChange,multiple:!0};return o.createElement(c.Upload,e({},n,{fileList:this.state.fileList}),o.createElement(c.Button,null,o.createElement(c.Icon,{type:"upload"})," upload"))},a}(o.Component);return o.createElement(l,null)}}},1089:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u7528\u6237\u53ef\u4ee5\u4e0a\u4f20\u56fe\u7247\u5e76\u5728\u5217\u8868\u4e2d\u663e\u793a\u7f29\u7565\u56fe\u3002\u5f53\u4e0a\u4f20\u7167\u7247\u6570\u5230\u8fbe\u9650\u5236\u540e\uff0c\u4e0a\u4f20\u6309\u94ae\u6d88\u5931\u3002"]],"en-US":[["p","After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."]]},meta:{order:3,title:{"zh-CN":"\u7167\u7247\u5899","en-US":"Pictures Wall"},filename:"components/upload/demo/picture-card.md",id:"components-upload-demo-picture-card"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PicturesWall</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    previewImage<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n      uid<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n      status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  handlePreview <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      previewImage<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>thumbUrl<span class="token punctuation">,</span>\n      previewVisible<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> previewVisible<span class="token punctuation">,</span> previewImage<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>Upload\n          action<span class="token operator">=</span><span class="token string">"//jsonplaceholder.typicode.com/posts/"</span>\n          listType<span class="token operator">=</span><span class="token string">"picture-card"</span>\n          fileList<span class="token operator">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span>\n          onPreview<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePreview<span class="token punctuation">}</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Modal</span> <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Modal</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PicturesWall</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],preview:function(){function n(n,s){for(var a=Object.getOwnPropertyNames(s),t=0;t<a.length;t++){var p=a[t],o=Object.getOwnPropertyDescriptor(s,p);o&&o.configurable&&void 0===n[p]&&Object.defineProperty(n,p,o)}return n}function s(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function t(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function p(s,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function, not "+typeof a);s.prototype=Object.create(a&&a.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),a&&(Object.setPrototypeOf?Object.setPrototypeOf(s,a):n(s,a))}var o=a(1),e=(a(2),a(3)),c=function(n){function a(){var p,o,e;s(this,a);for(var c=arguments.length,l=Array(c),u=0;u<c;u++)l[u]=arguments[u];return p=o=t(this,n.call.apply(n,[this].concat(l))),o.state={previewVisible:!1,previewImage:"",fileList:[{uid:-1,name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]},o.handleCancel=function(){return o.setState({previewVisible:!1})},o.handlePreview=function(n){o.setState({previewImage:n.url||n.thumbUrl,previewVisible:!0})},o.handleChange=function(n){var s=n.fileList;return o.setState({fileList:s})},e=p,t(o,e)}return p(a,n),a.prototype.render=function(){var n=this.state,s=n.previewVisible,a=n.previewImage,t=n.fileList,p=o.createElement("div",null,o.createElement(e.Icon,{type:"plus"}),o.createElement("div",{className:"ant-upload-text"},"Upload"));return o.createElement("div",{className:"clearfix"},o.createElement(e.Upload,{action:"//jsonplaceholder.typicode.com/posts/",listType:"picture-card",fileList:t,onPreview:this.handlePreview,onChange:this.handleChange},t.length>=3?null:p),o.createElement(e.Modal,{visible:s,footer:null,onCancel:this.handleCancel},o.createElement("img",{alt:"example",style:{width:"100%"},src:a})))},a}(o.Component);return o.createElement(c,null)},style:"/* you can make up upload button and sample style by using stylesheets */\n.ant-upload-select-picture-card i {\n  font-size: 28px;\n  color: #999;\n}\n\n.ant-upload-select-picture-card .ant-upload-text {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #666;\n}",highlightedStyle:'<span class="token comment" spellcheck="true">/* you can make up upload button and sample style by using stylesheets */</span>\n<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> i </span><span class="token punctuation">{</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">28</span>px<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#999</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> <span class="token class">.ant-upload-text</span> </span><span class="token punctuation">{</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},1090:function(n,s,a){n.exports={content:{"zh-CN":[["p","\u4e0a\u4f20\u6587\u4ef6\u4e3a\u56fe\u7247\uff0c\u53ef\u5c55\u793a\u672c\u5730\u7f29\u7565\u56fe\u3002",["code","IE8/9"]," \u4e0d\u652f\u6301\u6d4f\u89c8\u5668\u672c\u5730\u7f29\u7565\u56fe\u5c55\u793a\uff08",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"Ref"],"\uff09\uff0c\u53ef\u4ee5\u5199 ",["code","thumbUrl"]," \u5c5e\u6027\u6765\u4ee3\u66ff\u3002"]],"en-US":[["p","If uploade file is picture, a thumbnail can be shown. ",["code","IE8/9"]," do not support local thumbnail show. Please use ",["code","thumbUrl"]," instead."]]},meta:{order:6,title:{"zh-CN":"\u56fe\u7247\u5217\u8868\u6837\u5f0f","en-US":"Pictures with list style"},filename:"components/upload/demo/picture-style.md",id:"components-upload-demo-picture-style"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  uid<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'xxx.png\'</span><span class="token punctuation">,</span>\n  status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n  url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n  thumbUrl<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  uid<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'yyy.png\'</span><span class="token punctuation">,</span>\n  status<span class="token punctuation">:</span> <span class="token string">\'done\'</span><span class="token punctuation">,</span>\n  url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n  thumbUrl<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  listType<span class="token punctuation">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'//jsonplaceholder.typicode.com/posts/\'</span><span class="token punctuation">,</span>\n  listType<span class="token punctuation">:</span> <span class="token string">\'picture\'</span><span class="token punctuation">,</span>\n  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  className<span class="token punctuation">:</span> <span class="token string">\'upload-list-inline\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> upload\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props2<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> upload\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'
}],preview:function(){var n=a(1),s=(a(2),a(3)),t=[{uid:-1,name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:-2,name:"yyy.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}],p={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",defaultFileList:[].concat(t)},o={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",defaultFileList:[].concat(t),className:"upload-list-inline"};return n.createElement("div",null,n.createElement(s.Upload,p,n.createElement(s.Button,null,n.createElement(s.Icon,{type:"upload"})," upload")),n.createElement("br",null),n.createElement("br",null),n.createElement(s.Upload,o,n.createElement(s.Button,null,n.createElement(s.Icon,{type:"upload"})," upload")))},style:"/* tile uploaded pictures */\n.upload-list-inline .ant-upload-list-item {\n  float: left;\n  width: 200px;\n  margin-right: 8px;\n}\n.upload-list-inline .ant-upload-animate-enter {\n  animation-name: uploadAnimateInlineIn;\n}\n.upload-list-inline .ant-upload-animate-leave {\n  animation-name: uploadAnimateInlineOut;\n}",highlightedStyle:'<span class="token comment" spellcheck="true">/* tile uploaded pictures */</span>\n<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>\n  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-animate-enter</span> </span><span class="token punctuation">{</span>\n  <span class="token property">animation-name</span><span class="token punctuation">:</span> uploadAnimateInlineIn<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-animate-leave</span> </span><span class="token punctuation">{</span>\n  <span class="token property">animation-name</span><span class="token punctuation">:</span> uploadAnimateInlineOut<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},1357:function(n,s,a){n.exports={avatar:a(1084),basic:a(1085),defaultFileList:a(1086),drag:a(1087),fileList:a(1088),"picture-card":a(1089),"picture-style":a(1090)}}});